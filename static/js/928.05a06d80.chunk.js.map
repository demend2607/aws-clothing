{"version":3,"file":"static/js/928.05a06d80.chunk.js","mappings":"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","sources":["components/button/button.styles.tsx","components/button/Button.component.tsx","components/form-input/formInput.styles.tsx","components/form-input/FormInput.component.tsx","components/sign-up-form/signUpForm.styles.tsx","components/sign-up-form/SignUpForm.component.tsx","components/sign-in-form/signInForm.styles.tsx","components/sign-in-form/SignInForm.component.tsx","routes/authentication/authentication.styles.tsx","routes/authentication/Authentication.component.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nimport { SpinnerContainer } from '../spinner/spinner.styles';\r\n\r\nexport const BaseButton = styled.button`\r\n\tmin-width: 165px;\r\n\twidth: auto;\r\n\theight: 50px;\r\n\tletter-spacing: 0.5px;\r\n\tline-height: 20px;\r\n\tpadding: 0 35px 0 35px;\r\n\tfont-size: 14px;\r\n\tbackground-color: black;\r\n\tcolor: white;\r\n\ttext-transform: uppercase;\r\n\tfont-family: 'Open Sans Condensed';\r\n\tfont-weight: bolder;\r\n\tborder: none;\r\n\tcursor: pointer;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\t&:hover {\r\n\t\tbackground-color: white;\r\n\t\tcolor: black;\r\n\t\tborder: 1px solid black;\r\n\t}\r\n`;\r\n\r\nexport const GoogleSignInButton = styled(BaseButton)`\r\n\tbackground-color: #4285f4;\r\n\tcolor: white;\r\n\r\n\t&:hover {\r\n\t\tbackground-color: #357ae8;\r\n\t\tborder: none;\r\n\t}\r\n`;\r\nexport const InvertedButton = styled(BaseButton)`\r\n\tbackground-color: white;\r\n\tcolor: black;\r\n\tborder: 1px solid black;\r\n\r\n\t&:hover {\r\n\t\tbackground-color: black;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t}\r\n`;\r\n\r\nexport const ButtonSpinner = styled(SpinnerContainer)`\r\n\twidth: 30px;\r\n\theight: 30px;\r\n`;\r\n","import { FC, ButtonHTMLAttributes } from 'react';\r\nimport { BaseButton, GoogleSignInButton, InvertedButton, ButtonSpinner } from './button.styles';\r\n\r\nexport enum BUTTON_TYPE_CLASSES {\r\n\tbase = 'base',\r\n\tgoogle = 'google-sign-in',\r\n\tinverted = 'inverted',\r\n}\r\n\r\nexport type ButtonProps = {\r\n\tbuttonType?: BUTTON_TYPE_CLASSES;\r\n\tisLoading?: boolean;\r\n} & ButtonHTMLAttributes<HTMLButtonElement>;\r\n\r\nconst getButton = (buttonType = BUTTON_TYPE_CLASSES.base): typeof BaseButton =>\r\n\t({\r\n\t\t[BUTTON_TYPE_CLASSES.base]: BaseButton,\r\n\t\t[BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\r\n\t\t[BUTTON_TYPE_CLASSES.inverted]: InvertedButton,\r\n\t}[buttonType]);\r\n\r\nconst Button: FC<ButtonProps> = ({ children, buttonType, isLoading, ...otherProps }) => {\r\n\tconst CustomButton = getButton(buttonType);\r\n\r\n\treturn (\r\n\t\t<CustomButton disabled={isLoading} {...otherProps}>\r\n\t\t\t{isLoading ? <ButtonSpinner></ButtonSpinner> : children}\r\n\t\t</CustomButton>\r\n\t);\r\n};\r\n\r\nexport default Button;\r\n","import styled, { css } from 'styled-components';\r\n\r\ntype FormInputLabelProps = {\r\n\tshrink?: boolean;\r\n};\r\n\r\nconst subColor = 'grey'; // From scss: $sub-color: grey;\r\nconst mainColor = 'black'; //From scss:  $main-color: black;\r\n\r\nconst shrinkLabelStyles = css`\r\n\ttop: -18px;\r\n\tfont-size: 12px;\r\n\tcolor: ${mainColor};\r\n`;\r\n\r\nexport const FormInputLabel = styled.label<FormInputLabelProps>`\r\n\tcolor: $sub-color;\r\n\tfont-size: 16px;\r\n\tfont-weight: normal;\r\n\tposition: absolute;\r\n\tpointer-events: none;\r\n\tleft: 5px;\r\n\ttop: 10px;\r\n\ttransition: 300ms ease all;\r\n\tbackground: none;\r\n\r\n\t${({ shrink }) => shrink && shrinkLabelStyles}\r\n\r\n\t&.shrink {\r\n\t\t@include shrinkLabel();\r\n\t}\r\n`;\r\n\r\nexport const Input = styled.input`\r\n\tbackground-color: white;\r\n\tcolor: ${subColor};\r\n\tfont-size: 18px;\r\n\tpadding: 10px 10px 10px 5px;\r\n\tdisplay: block;\r\n\twidth: 100%;\r\n\tborder: none;\r\n\tborder-radius: 0;\r\n\tborder-bottom: 1px solid ${subColor};\r\n\tmargin: 25px 0;\r\n\r\n\t&:focus {\r\n\t\toutline: none;\r\n\t}\r\n\r\n\t&:focus ~ ${FormInputLabel} {\r\n\t\t${shrinkLabelStyles};\r\n\t}\r\n`;\r\nexport const Group = styled.div`\r\n\tposition: relative;\r\n\tmargin: 45px 0;\r\n\r\n\t.form-input {\r\n\t\tbackground: none;\r\n\t}\r\n\tinput[type='password'] {\r\n\t\tletter-spacing: 0.3em;\r\n\t}\r\n`;\r\n","import { FC, InputHTMLAttributes } from 'react';\r\nimport { FormInputLabel, Group, Input } from './formInput.styles';\r\n\r\nexport type FormInputProps = {\r\n\tlabel: string;\r\n} & InputHTMLAttributes<HTMLInputElement>;\r\n\r\nconst FormInput: FC<FormInputProps> = ({ label, ...otherProps }) => {\r\n\treturn (\r\n\t\t<Group>\r\n\t\t\t<Input {...otherProps} />\r\n\t\t\t{label && (\r\n\t\t\t\t// className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}\r\n\t\t\t\t<FormInputLabel\r\n\t\t\t\t\tshrink={Boolean(\r\n\t\t\t\t\t\totherProps.value && typeof otherProps.value === 'string' && otherProps.value.length\r\n\t\t\t\t\t)}>\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</FormInputLabel>\r\n\t\t\t)}\r\n\t\t</Group>\r\n\t);\r\n};\r\n\r\nexport default FormInput;\r\n","import styled from 'styled-components';\r\n\r\nexport const SignUpContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\twidth: 380px;\r\n\th2 {\r\n\t\tmargin: 10px 0;\r\n\t}\r\n`;\r\n","import { useState, FormEvent, ChangeEvent } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport FormInput from '../form-input/FormInput.component';\r\nimport Button from '../button/Button.component';\r\n\r\nimport { SignUpContainer } from './signUpForm.styles';\r\nimport { signUpStart } from '../../store/user/user.action';\r\nimport { AuthError, AuthErrorCodes } from 'firebase/auth';\r\n\r\nconst defaultFormFields = {\r\n\tdisplayName: '',\r\n\temail: '',\r\n\tpassword: '',\r\n\tconfirmPassword: '',\r\n};\r\n\r\nconst SignUpForm = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst [formFields, setFormFields] = useState(defaultFormFields);\r\n\tconst { displayName, email, password, confirmPassword } = formFields;\r\n\r\n\tconst resetFormFields = () => setFormFields(defaultFormFields);\r\n\r\n\tconst handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tif (password !== confirmPassword) {\r\n\t\t\talert('password do not match');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tdispatch(signUpStart(email, password, displayName));\r\n\t\t\tresetFormFields();\r\n\t\t} catch (error) {\r\n\t\t\tif ((error as AuthError).code === AuthErrorCodes.EMAIL_EXISTS) {\r\n\t\t\t\talert('Cannot create user, email already in use');\r\n\t\t\t}\r\n\t\t\tconsole.log('error xz', error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst { name, value } = event.target;\r\n\r\n\t\tsetFormFields({ ...formFields, [name]: value });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<SignUpContainer>\r\n\t\t\t<h1>Don't have an account?</h1>\r\n\t\t\t<span>Sign up with your email and password</span>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tlabel=\"Display Name\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tname=\"displayName\"\r\n\t\t\t\t\tvalue={displayName}\r\n\t\t\t\t/>\r\n\t\t\t\t<FormInput required label=\"Email\" type=\"email\" onChange={handleChange} name=\"email\" value={email} />\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t/>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tlabel=\"Confirm Password\"\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tname=\"confirmPassword\"\r\n\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button type=\"submit\">Sign up</Button>\r\n\t\t\t</form>\r\n\t\t</SignUpContainer>\r\n\t);\r\n};\r\n\r\nexport default SignUpForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const SignInContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\twidth: 380px;\r\n\th2 {\r\n\t\tmargin: 10px 0;\r\n\t}\r\n`;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n`;\r\n","import { useState, FormEvent, ChangeEvent } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport Button, { BUTTON_TYPE_CLASSES } from '../button/Button.component';\r\nimport FormInput from '../form-input/FormInput.component';\r\n\r\nimport { SignInContainer, ButtonsContainer } from './signInForm.styles';\r\nimport { googleSignInStart, emailSignInStart } from '../../store/user/user.action';\r\nimport { AuthError, AuthErrorCodes } from 'firebase/auth';\r\n\r\nconst defaultFormFields = {\r\n\temail: '',\r\n\tpassword: '',\r\n};\r\n\r\nconst SignInForm = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst [formFields, setFormFields] = useState(defaultFormFields);\r\n\tconst { email, password } = formFields;\r\n\r\n\tconst resetFormFoelds = () => setFormFields(defaultFormFields);\r\n\r\n\t//* Google handler\r\n\tconst signInWithGoogle = async () => {\r\n\t\tdispatch(googleSignInStart());\r\n\t};\r\n\r\n\tconst handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\r\n\t\tevent.preventDefault();\r\n\t\ttry {\r\n\t\t\tdispatch(emailSignInStart(email, password));\r\n\t\t\tresetFormFoelds();\r\n\t\t} catch (error) {\r\n\t\t\tswitch ((error as AuthError).code) {\r\n\t\t\t\tcase AuthErrorCodes.INVALID_PASSWORD:\r\n\t\t\t\t\talert('incorrect password for email');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase AuthErrorCodes.USER_DELETED:\r\n\t\t\t\t\talert('user with this email not found');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst { name, value } = event.target;\r\n\r\n\t\tsetFormFields({ ...formFields, [name]: value });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<SignInContainer>\r\n\t\t\t<h1>Already have an account?</h1>\r\n\t\t\t<span>Sign in with your email and password</span>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<FormInput required label=\"Email\" type=\"email\" onChange={handleChange} name=\"email\" value={email} />\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t/>\r\n\t\t\t\t<ButtonsContainer>\r\n\t\t\t\t\t<Button type=\"submit\">Sign in</Button>\r\n\t\t\t\t\t<Button type=\"button\" buttonType={BUTTON_TYPE_CLASSES.google} onClick={signInWithGoogle}>\r\n\t\t\t\t\t\tGoogle sign in\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</ButtonsContainer>\r\n\t\t\t</form>\r\n\t\t</SignInContainer>\r\n\t);\r\n};\r\n\r\nexport default SignInForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const AuthenticationContainer = styled.div`\r\n\tdisplay: flex;\r\n\tmax-width: 900px;\r\n\tmargin: 30px auto;\r\n\tjustify-content: space-between;\r\n\t@media screen and (max-width: 950px) {\r\n\t\talign-items: center;\r\n\t\tflex-direction: column;\r\n\t}\r\n`;\r\n","import SignUpForm from '../../components/sign-up-form/SignUpForm.component';\r\nimport SignInForm from '../../components/sign-in-form/SignInForm.component';\r\n\r\nimport { AuthenticationContainer } from './authentication.styles';\r\n\r\nconst Authentication = () => {\r\n\treturn (\r\n\t\t<AuthenticationContainer>\r\n\t\t\t<SignInForm />\r\n\t\t\t<SignUpForm />\r\n\t\t</AuthenticationContainer>\r\n\t);\r\n};\r\n\r\nexport default Authentication;\r\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}"],"names":["BaseButton","styled","button","_templateObject","_taggedTemplateLiteral","GoogleSignInButton","_templateObject2","InvertedButton","_templateObject3","ButtonSpinner","SpinnerContainer","_templateObject4","BUTTON_TYPE_CLASSES","_ref","children","buttonType","isLoading","otherProps","_objectWithoutProperties","_excluded","CustomButton","_BUTTON_TYPE_CLASSES$","arguments","length","undefined","base","_defineProperty","google","inverted","getButton","_jsx","_objectSpread","disabled","subColor","shrinkLabelStyles","css","FormInputLabel","label","shrink","Input","input","Group","div","_jsxs","Boolean","value","SignUpContainer","defaultFormFields","displayName","email","password","confirmPassword","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","formFields","setFormFields","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","wrap","_context","prev","next","preventDefault","alert","abrupt","signUpStart","error","code","AuthErrorCodes","EMAIL_EXISTS","console","log","stop","_x","apply","handleChange","_event$target","target","name","onSubmit","FormInput","required","type","onChange","Button","SignInContainer","ButtonsContainer","signInWithGoogle","googleSignInStart","_ref2","_callee2","_context2","emailSignInStart","t0","t1","INVALID_PASSWORD","USER_DELETED","onClick","AuthenticationContainer","SignInForm","SignUpForm","source","excluded","key","i","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}